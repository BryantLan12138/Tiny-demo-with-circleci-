version: 2.1
orbs:
  node: circleci/node@1.1.6
commands:
  install_deps:
    steps:
      - run:
          name: Install npm dependencies
          command: |
            npm install


jobs:
  build-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      - install_deps
      - node/with-cache:
          steps:
            - run: npm test
  unit-test:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run: 
          name: run unit-test
          command: |
            npm install mocha --save-dev
            mkdir ~/unit_test_result
            npm run test-unit  
          enviornment:
            Mocha_FILE: ~/unit_test_result/test-results.xml 
          when: always
      - store_test_results:
          path: ~/unit_test_result
      - store_artifacts:
          path: ~/unit_test_result 
  eslint-test:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: run eslint-test
          command: |
            npm install eslint --save-dev
            npm run test-lint  
  code-coverage:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: run code-coverage
          command: |
            npm install --save-dev nyc 
            npm run test-coverage
  pack:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: run pack
          command: |
            npm pack 
            mkdir dist 
            mv rmit-app-0.0.0.tgz ./dist
            cd dist
            tar xvzf rmit-app-0.0.0.tgz
      - store_artifacts:
          path: dist
  integration-test:
    docker:
      - image: circleci/node:lts
      - image: postgres:latest
    steps:
      - checkout
      - install_deps
      - run:
          name: integration test
          command: |
            npm run test-integration 

           
      
workflows:
    build-and-test:
      jobs:
        - build-and-test
        - unit-test:
            requires:
              - build-and-test
        - eslint-test:
            requires:
              - build-and-test
        - code-coverage:
            requires:
              - unit-test
        - pack:
            requires:
              - code-coverage
            filters:
              branches:
                only:
                  - master
        - integration-test:
            requires:
              - pack